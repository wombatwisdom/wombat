on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  check-license:
    name: Check for enterprise dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.x
          check-latest: true
      
      - name: Setup go-task / task / taskfile
        uses: rnorton5432/setup-task@v1
      
      - name: Check license compliance
        run: task check:license

  binaries:
    name: Release Go Binary
    runs-on: ubuntu-latest
    needs: check-license
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v5
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "./cmd/wombat"
          binary_name: "wombat"
          extra_files: LICENSE README.md

  docker:
    name: Build the wombat image
    runs-on: ubuntu-latest
    needs: check-license
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/wombat
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max